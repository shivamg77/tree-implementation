public class Tree {
    static Node root;

    static class Node {
        int data;
        Node left, right;

        Node(int data) {
            this.data = data;
            left = null;
            right = null;
        }
    }

    public Node insert(Node node, int data)
    {
        if(node==null)
        {
            return new Node(data);
        }

        if(data<node.data)
        {
            if(node.left!=null)
            {
                insert(node.left, data);
            }
            else
                node.left=new Node(data);
        }
        else if(data>node.data)
        {
            if(node.right!=null)
            {
                insert(node.right, data);
            }
            else
                node.right=new Node(data);
        }
        return node;
    }

    public void add(int data)
    {
        root=insert(root, data);
    }

    void displayInOrder(Node node) {
        if (node == null) {
            return;
        } else {
            displayInOrder(node.left);
            System.out.print(" " + node.data);
            displayInOrder(node.right);
        }
    }



    void displayPreOrder(Node node)  {
        if (node == null) 
            return;
         else 
         {
            System.out.print(" " + node.data);
            displayPreOrder(node.left);
            displayPreOrder(node.right);
          }
      }
    
    
    

    void displayPostOrder(Node node) {
        if (node == null) {
            return;
        } else {
            displayPostOrder(node.left);
            displayPostOrder(node.right);
            System.out.print(" " + node.data);
        }
    }

    public static void main(String args[]) {
        Tree bt = new Tree();

        bt.add(1);
        bt.add(2);
        bt.add(3);
        bt.add(4);
        bt.add(5);
        bt.displayInOrder(root);
        System.out.println("");

        bt.displayPreOrder(root);
        System.out.println(" ");

        bt.displayPostOrder(root);
    }
}
